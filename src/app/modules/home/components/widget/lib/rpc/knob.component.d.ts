import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { WidgetContext } from '@home/models/widget-component.models';
import { UtilsService } from '@core/services/utils.service';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import * as i0 from "@angular/core";
export declare class KnobComponent extends PageComponent implements OnInit, OnDestroy {
    private utils;
    protected store: Store<AppState>;
    knobRef: ElementRef<HTMLElement>;
    knobContainerRef: ElementRef<HTMLElement>;
    knobTopPointerContainerRef: ElementRef<HTMLElement>;
    knobTopPointerRef: ElementRef<HTMLElement>;
    knobValueContainerRef: ElementRef<HTMLElement>;
    knobValueRef: ElementRef<HTMLElement>;
    knobErrorContainerRef: ElementRef<HTMLElement>;
    knobErrorRef: ElementRef<HTMLElement>;
    knobTitleContainerRef: ElementRef<HTMLElement>;
    knobTitleRef: ElementRef<HTMLElement>;
    knobMinmaxContainerRef: ElementRef<HTMLElement>;
    textMeasureRef: ElementRef<HTMLElement>;
    canvasBarElementRef: ElementRef<HTMLElement>;
    ctx: WidgetContext;
    value: string;
    error: string;
    title: string;
    minValue: number;
    maxValue: number;
    newValue: number;
    private startDeg;
    private currentDeg;
    private rotation;
    private lastDeg;
    private moving;
    private minDeg;
    private maxDeg;
    private isSimulated;
    private requestTimeout;
    private requestPersistent;
    private persistentPollingInterval;
    private getValueMethod;
    private setValueMethod;
    private executingUpdateValue;
    private scheduledValue;
    private rpcValue;
    private knob;
    private knobContainer;
    private knobTopPointerContainer;
    private knobTopPointer;
    private knobValueContainer;
    private knobValue;
    private knobTitleContainer;
    private knobTitle;
    private knobErrorContainer;
    private knobError;
    private knobMinmaxContainer;
    private minmaxLabel;
    private textMeasure;
    private canvasBarElement;
    private canvasBar;
    private knobResize$;
    constructor(utils: UtilsService, store: Store<AppState>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private init;
    private degreeToRatio;
    private ratioToDegree;
    private turn;
    private resize;
    private checkValueSize;
    private setFontSize;
    private measureTextWidth;
    private setValue;
    private updateColor;
    private onValue;
    private formatValue;
    private rpcRequestValue;
    private rpcUpdateValue;
    private onError;
    static ɵfac: i0.ɵɵFactoryDeclaration<KnobComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<KnobComponent, "tb-knob", never, { "ctx": "ctx"; }, {}, never, never, false, never>;
}
