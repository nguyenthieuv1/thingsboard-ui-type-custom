import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { WidgetContext } from '@home/models/widget-component.models';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { UtilsService } from '@core/services/utils.service';
import * as i0 from "@angular/core";
export declare class LedIndicatorComponent extends PageComponent implements OnInit, OnDestroy {
    private utils;
    protected store: Store<AppState>;
    ledRef: ElementRef<HTMLElement>;
    ledContainerRef: ElementRef<HTMLElement>;
    textMeasureRef: ElementRef<HTMLElement>;
    ledTitleContainerRef: ElementRef<HTMLElement>;
    ledTitleRef: ElementRef<HTMLElement>;
    ledErrorContainerRef: ElementRef<HTMLElement>;
    ledErrorRef: ElementRef<HTMLElement>;
    ctx: WidgetContext;
    showTitle: boolean;
    value: boolean;
    error: string;
    title: string;
    private valueAttribute;
    private ledColor;
    private ledMiddleColor;
    private disabledColor;
    private disabledMiddleColor;
    private isSimulated;
    private requestTimeout;
    private requestPersistent;
    private persistentPollingInterval;
    private retrieveValueMethod;
    private parseValueFunction;
    private performCheckStatus;
    private checkStatusMethod;
    private destroyed;
    private checkStatusTimeoutHandle;
    private subscription;
    private led;
    private ledContainer;
    private textMeasure;
    private ledTitleContainer;
    private ledTitle;
    private ledErrorContainer;
    private ledError;
    private ledResize$;
    private subscriptionOptions;
    constructor(utils: UtilsService, store: Store<AppState>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private init;
    private resize;
    private setFontSize;
    private measureTextWidth;
    private onError;
    private setValue;
    private updateColor;
    private rpcCheckStatus;
    private subscribeForValue;
    private onDataUpdated;
    private onDataUpdateError;
    static ɵfac: i0.ɵɵFactoryDeclaration<LedIndicatorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LedIndicatorComponent, "tb-led-indicator", never, { "ctx": "ctx"; }, {}, never, never, false, never>;
}
