import { OnInit } from '@angular/core';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { TranslateService } from '@ngx-translate/core';
import { AlarmCommentService } from '@core/http/alarm-comment.service';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { DialogService } from '@core/services/dialog.service';
import { AuthUser } from '@shared/models/user.model';
import { SortOrder } from '@shared/models/page/sort-order';
import { DateAgoPipe } from '@shared/pipe/date-ago.pipe';
import { AlarmComment } from '@shared/models/alarm.models';
import { UtilsService } from '@core/services/utils.service';
import { DatePipe } from '@angular/common';
import { ImportExportService } from '@home/components/import-export/import-export.service';
import * as i0 from "@angular/core";
interface AlarmCommentsDisplayData {
    commentId?: string;
    displayName?: string;
    createdTime: string;
    createdDateAgo?: string;
    edit?: boolean;
    isEdited?: boolean;
    editedTime?: string;
    editedDateAgo?: string;
    showActions?: boolean;
    commentText?: string;
    isSystemComment?: boolean;
    avatarBgColor?: string;
}
export declare class AlarmCommentComponent implements OnInit {
    protected store: Store<AppState>;
    private translate;
    private alarmCommentService;
    fb: FormBuilder;
    private dialogService;
    dateAgoPipe: DateAgoPipe;
    private utilsService;
    private datePipe;
    private importExportService;
    alarmId: string;
    alarmActivityOnly: boolean;
    authUser: AuthUser;
    alarmCommentFormGroup: FormGroup;
    alarmComments: Array<AlarmComment>;
    displayData: Array<AlarmCommentsDisplayData>;
    alarmCommentSortOrder: SortOrder;
    editMode: boolean;
    userDisplayName$: import("rxjs").Observable<string>;
    currentUserDisplayName: string;
    currentUserAvatarColor: string;
    constructor(store: Store<AppState>, translate: TranslateService, alarmCommentService: AlarmCommentService, fb: FormBuilder, dialogService: DialogService, dateAgoPipe: DateAgoPipe, utilsService: UtilsService, datePipe: DatePipe, importExportService: ImportExportService);
    ngOnInit(): void;
    loadAlarmComments(): void;
    changeSortDirection(): void;
    exportAlarmActivity(): void;
    saveComment(): void;
    saveEditedComment(commentId: string): void;
    private doSave;
    editComment(commentId: string): void;
    cancelEdit(commentId: string): void;
    deleteComment(commentId: string): void;
    getSortDirectionIcon(): "mdi:sort-descending" | "mdi:sort-ascending";
    getSortDirectionTooltipText(): any;
    isDirectionAscending(): boolean;
    onCommentMouseEnter(commentId: string, displayDataIndex: number): void;
    onCommentMouseLeave(displayDataIndex: number): void;
    getUserInitials(userName: string): string;
    getCurrentUserBgColor(userDisplayName: string): string;
    private getUserDisplayName;
    getAlarmCommentFormControl(): AbstractControl;
    getAlarmCommentEditFormControl(): AbstractControl;
    private clearCommentInput;
    private clearCommentEditInput;
    private getAlarmCommentById;
    private getDataElementByCommentId;
    private getDataForExport;
    static ɵfac: i0.ɵɵFactoryDeclaration<AlarmCommentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AlarmCommentComponent, "tb-alarm-comment", never, { "alarmId": "alarmId"; "alarmActivityOnly": "alarmActivityOnly"; }, {}, never, never, false, never>;
}
export {};
