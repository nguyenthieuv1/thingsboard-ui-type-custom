import { ElementRef, NgZone, OnDestroy, OnInit } from '@angular/core';
import { PageComponent } from '@shared/components/page.component';
import { WidgetContext } from '@home/models/widget-component.models';
import { Store } from '@ngrx/store';
import { AppState } from '@core/core.state';
import { Overlay } from '@angular/cdk/overlay';
import { UtilsService } from '@core/services/utils.service';
import { AttributeService } from '@core/http/attribute.service';
import { DomSanitizer, SafeUrl } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export declare class PhotoCameraInputWidgetComponent extends PageComponent implements OnInit, OnDestroy {
    private window;
    protected store: Store<AppState>;
    private elementRef;
    private ngZone;
    private overlay;
    private utils;
    private attributeService;
    private sanitizer;
    constructor(window: Window, store: Store<AppState>, elementRef: ElementRef, ngZone: NgZone, overlay: Overlay, utils: UtilsService, attributeService: AttributeService, sanitizer: DomSanitizer);
    get videoElement(): HTMLVideoElement;
    get canvasElement(): HTMLCanvasElement;
    get videoWidth(): number;
    get videoHeight(): number;
    private static DEFAULT_IMAGE_TYPE;
    private static DEFAULT_IMAGE_QUALITY;
    ctx: WidgetContext;
    videoStreamRef: ElementRef<HTMLVideoElement>;
    canvasRef: ElementRef<HTMLCanvasElement>;
    private videoInputsIndex;
    private settings;
    private datasource;
    private width;
    private height;
    private availableVideoInputs;
    private mediaStream;
    isEntityDetected: boolean;
    dataKeyDetected: boolean;
    isProtocolHttps: boolean;
    isCameraSupport: boolean;
    isDeviceDetect: boolean;
    isShowCamera: boolean;
    isPreviewPhoto: boolean;
    isHavePermissionCamera: boolean;
    isLoading: boolean;
    singleDevice: boolean;
    updatePhoto: boolean;
    previewPhoto: SafeUrl;
    lastPhoto: SafeUrl;
    datasourceDetected: boolean;
    private static hasGetUserMedia;
    private static getAvailableVideoInputs;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private updateWidgetData;
    onDataUpdated(): void;
    private detectAvailableDevices;
    private getVideoAspectRatio;
    private stopMediaTracks;
    takePhoto(): void;
    closeCamera(): void;
    cancelPhoto(): void;
    savePhoto(): void;
    switchWebCamera(): void;
    createPhoto(): void;
    private inititedVideoStream;
    get textMessage(): "" | "widgets.input-widgets.enable-https-use-widget" | "widgets.input-widgets.no-support-web-camera" | "widgets.input-widgets.no-entity-selected" | "widgets.input-widgets.no-datakey-selected" | "widgets.input-widgets.no-found-your-camera" | "widgets.input-widgets.no-permission-camera";
    static ɵfac: i0.ɵɵFactoryDeclaration<PhotoCameraInputWidgetComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PhotoCameraInputWidgetComponent, "tb-photo-camera-widget", never, { "ctx": "ctx"; }, {}, never, never, false, never>;
}
