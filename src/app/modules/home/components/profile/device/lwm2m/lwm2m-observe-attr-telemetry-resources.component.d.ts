import { OnDestroy } from '@angular/core';
import { ControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, ValidationErrors, Validator } from '@angular/forms';
import { ResourceLwM2M } from '@home/components/profile/device/lwm2m/lwm2m-profile-config.models';
import * as i0 from "@angular/core";
export declare class Lwm2mObserveAttrTelemetryResourcesComponent implements ControlValueAccessor, OnDestroy, Validator {
    private fb;
    resourcesFormGroup: UntypedFormGroup;
    disabled: boolean;
    private requiredValue;
    get required(): boolean;
    set required(value: boolean);
    private destroy$;
    private propagateChange;
    constructor(fb: UntypedFormBuilder);
    ngOnDestroy(): void;
    registerOnTouched(fn: any): void;
    registerOnChange(fn: any): void;
    writeValue(value: ResourceLwM2M[]): void;
    setDisabledState(isDisabled: boolean): void;
    validate(): ValidationErrors | null;
    get resourcesFormArray(): UntypedFormArray;
    getNameResourceLwm2m(resourceLwM2M: ResourceLwM2M): string;
    private updatedResources;
    private createdResourceFormGroup;
    private updateModel;
    trackByParams(index: number, resource: ResourceLwM2M): number;
    isDisabledObserve(index: number): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<Lwm2mObserveAttrTelemetryResourcesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Lwm2mObserveAttrTelemetryResourcesComponent, "tb-profile-lwm2m-observe-attr-telemetry-resource", never, { "disabled": "disabled"; "required": "required"; }, {}, never, never, false, never>;
}
